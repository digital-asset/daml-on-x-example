daml 1.2 module ERC20 where
import DataTypes


template ERC20TokenIssue
  with
    issuer: Party
    investors: [Party]
    outstanding: Int
    balances: [(Text, Int)]
    offering: OfferingDetails
  where
    signatory issuer
    observer investors

    -- ERC20 Interfaces
    nonconsuming choice TotalSupply: Int
      with
        requestor: Party
      controller requestor
      do
        return offering.maxChunks
    
    nonconsuming choice BalanceOf: Int
      with
        requestor: Party
        walletAddress: Text
      controller requestor
      do
        case (find (\(add, bal) -> add == walletAddress) balances) of
          Some (add, bal) -> return bal
          None -> return 0

--     allowance(address tokenOwner, address spender) public view returns (uint remaining);
--     transfer(address to, uint tokens) public returns (bool success);
--     approve(address spender, uint tokens) public returns (bool success);
--     transferFrom(address from, address to, uint tokens) public returns (bool success);

    -- Servicing choices
    controller issuer can
      AllocateTokens: ContractId ERC20TokenIssue
        with
          walletAddress: Text
          quantity: Int
        do
          assert (quantity <= outstanding)
          create this with balances = (walletAddress, quantity) :: balances, outstanding = (outstanding - quantity)
      
      -- TransferTokens
      -- Close out position


template TokenBuyinBid
  with
    investor: Party
    issuer: Party
    walletAddress: Text
    tokenOffering: ContractId ERC20TokenIssue
    quantity: Int
  where
    signatory investor

    controller issuer can
      AcceptTokenBid: (
          ContractId ERC20TokenIssue,
          ContractId TokenContract
        )
        do
          to_ <- fetch tokenOffering
          issue <- exercise tokenOffering AllocateTokens with ..
          shares <- create TokenContract with symbol = to_.offering.issueSymbol, ..
          return (issue, shares)


template TokenContract
  with
    issuer: Party
    investor: Party
    symbol: Text
    quantity: Int
  where
    signatory issuer, investor
