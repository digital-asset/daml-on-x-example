# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- script: |
    echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
    sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
    sudo apt-get update
    sudo apt-get install sbt
  displayName: 'Install SBT'

- script: sbt scalafmtCheckAll
  displayName: 'Check formatting'

- script: sbt compile
  displayName: 'Compile'

- script: sbt test
  displayName: 'Unit tests'

- script: sbt assembly
  displayName: 'Package'

- script: |
     # curl -L 'https://bintray.com/api/v1/content/digitalassetsdk/DigitalAssetSDK/com/daml/ledger/testtool/ledger-api-test-tool_2.12/$latest/ledger-api-test-tool_2.12-$latest.jar?bt_package=sdk-components' -o ledger-api-test-tool.jar
     # Use specific version until https://github.com/digital-asset/daml/pull/613 is merged
     curl -L 'https://bintray.com/api/v1/content/digitalassetsdk/DigitalAssetSDK/com/daml/ledger/testtool/ledger-api-test-tool_2.12/100.12.7/ledger-api-test-tool_2.12-100.12.7.jar?bt_package=sdk-components' -o ledger-api-test-tool.jar
     java -jar ledger-api-test-tool.jar --extract
     java -jar target/scala-2.12/damlonx-example.jar --port=6865 SemanticTests.dar &
     while ! timeout 1 bash -c "echo > /dev/tcp/localhost/6865"; do
       sleep 1
     done
     java -jar ledger-api-test-tool.jar -h localhost -p 6865
  displayName: 'Integration test'
